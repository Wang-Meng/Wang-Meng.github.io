<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>GitHub page + Hexo 搭建个人博客</title>
      <link href="/2018/09/17/wo-de-di-yi-pian-bo-ke/"/>
      <url>/2018/09/17/wo-de-di-yi-pian-bo-ke/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>鉴于笔记记录平时学习总结的内容流通性较差，各论坛/博客平台对编辑发布的时效性要求比较高，而完全独立自主地搭建个人博客网站的成本（网站页面开发、服务器、域名等个人精力及财力耗费）较高，在开源环境下，通过github page + Hexo的方式极大地方便了各个有以上困扰的开发者。</p><h1 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h1><ul><li><a href="https://github.com" target="_blank" rel="noopener">GitHub</a>账号</li><li><a href="https://git-scm.com/" target="_blank" rel="noopener">Git</a></li><li><a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js</a></li><li>Markdown编辑器<h1 id="GitHub-page"><a href="#GitHub-page" class="headerlink" title="GitHub page"></a><a href="https://pages.github.com/" target="_blank" rel="noopener">GitHub page</a></h1>github page是直接托管于个人<a href="https://github.com/" target="_blank" rel="noopener">GitHub</a>的一项服务，可用于免费搭建个人网站/博客.<h2 id="创建github账号-创建托管仓库repository及github-page"><a href="#创建github账号-创建托管仓库repository及github-page" class="headerlink" title="创建github账号-创建托管仓库repository及github page"></a>创建github账号-创建托管仓库repository及github page</h2><img src=".png" alt=""><br>repository格式：账户名.github.io<br>点击右侧Clone or download保存ssh地址<br>点击右侧Settings按钮，下拉选择github page，可选择喜欢的theme，即可通过“账户名.github.io”网址访问个人github page。<h1 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a><a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a></h1>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">docs</a><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><h3 id="安装前提"><a href="#安装前提" class="headerlink" title="安装前提"></a>安装前提</h3>安装 Hexo 相当简单。然而在安装前，您必须检查电脑中是否已安装下列应用程序：<ul><li>Node.js</li><li>Git<br>如果您的电脑中已经安装上述必备程序，那么恭喜您！接下来只需要使用 npm 即可完成 Hexo 的安装。<br>$ npm install -g hexo-cli<br>如果您的电脑中尚未安装所需要的程序，请根据以下安装指示完成安装。<h3 id="Mac-用户"><a href="#Mac-用户" class="headerlink" title="Mac 用户"></a>Mac 用户</h3>您在编译时可能会遇到问题，请先到 App Store 安装 Xcode，Xcode 完成后，启动并进入 Preferences -&gt; Download -&gt; Command Line Tools -&gt; Install 安装命令行工具。<h2 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h2>Windows：下载并安装 git.<br>Mac：使用 Homebrew, MacPorts ：brew install git;或下载 安装程序 安装。<br>Linux (Ubuntu, Debian)：sudo apt-get install git-core<br>Linux (Fedora, Red Hat, CentOS)：sudo yum install git-core<br>Windows 用户<br>由于众所周知的原因，从上面的链接下载git for windows最好挂上一个代理，否则下载速度十分缓慢。也可以参考这个页面，收录了存储于百度云的下载地址。<h2 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h2>安装 Node.js 的最佳方式是使用 nvm。<h3 id="cURL"><a href="#cURL" class="headerlink" title="cURL:"></a>cURL:</h3>$ curl <a href="https://raw.github.com/creationix/nvm/v0.33.11/install.sh" target="_blank" rel="noopener">https://raw.github.com/creationix/nvm/v0.33.11/install.sh</a> | sh<h3 id="Wget"><a href="#Wget" class="headerlink" title="Wget:"></a>Wget:</h3>$ wget -qO- <a href="https://raw.github.com/creationix/nvm/v0.33.11/install.sh" target="_blank" rel="noopener">https://raw.github.com/creationix/nvm/v0.33.11/install.sh</a> | sh<br>安装完成后，重启终端并执行下列命令即可安装 Node.js。<br>$ nvm install stable<br>或者您也可以下载 安装程序 来安装。<h3 id="Windows-用户"><a href="#Windows-用户" class="headerlink" title="Windows 用户"></a>Windows 用户</h3>对于windows用户来说，建议使用安装程序进行安装。安装时，请勾选Add to PATH选项。<br>另外，您也可以使用Git Bash，这是git for windows自带的一组程序，提供了Linux风格的shell，在该环境下，您可以直接用上面提到的命令来安装Node.js。打开它的方法很简单，在任意位置单击右键，选择“Git Bash Here”即可。由于Hexo的很多操作都涉及到命令行，您可以考虑始终使用Git Bash来进行操作。<h3 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h3>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。<br>$ npm install -g hexo-cli<h2 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h2>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。<br>$ hexo init <folder><br>$ cd <folder><br>$ npm install<h3 id="config-yml"><a href="#config-yml" class="headerlink" title="_config.yml"></a>_config.yml</h3>在生成的文件中，_config.yml是网站的配置信息，可以在此配置大部分的参数。<h3 id="themes"><a href="#themes" class="headerlink" title="themes"></a>themes</h3>主题 文件夹。Hexo 会根据主题来生成静态页面。创建 Hexo 主题非常容易，您只要在 themes 文件夹内，新增一个任意名称的文件夹，并修改 _config.yml 内的 theme 设定，即可切换主题。我们可以使用自己开发主题也可以方便的使用<a href="https://hexo.io/themes/" target="_blank" rel="noopener">Hexo提供的主题</a>。<h4 id="使用Hexo主题"><a href="#使用Hexo主题" class="headerlink" title="使用Hexo主题"></a>使用Hexo主题</h4>1.选择自己喜欢的开放免费的主题，pick github 该主题的ssh地址。<br>2.再theme文件夹内，下载主题。<br>3.配置theme文件夹内的_config.yml。（theme: 下载的主题文件夹名称）<br>完成以上步骤，即可使用自己喜欢的主题。<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2>可以在根目录下的 _config.yml 中修改大部份的配置。<h3 id="网站"><a href="#网站" class="headerlink" title="网站"></a>网站</h3>参数    描述<br>title    网站标题<br>subtitle    网站副标题<br>description    网站描述<br>author    您的名字<br>language    网站使用的语言<br>timezone    网站时区。Hexo 默认使用您电脑的时区。时区列表。比如说：America/New_York, Japan, 和 UTC 。<br>其中，description主要用于SEO，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词。author参数用于主题显示文章的作者。<h3 id="网址"><a href="#网址" class="headerlink" title="网址"></a>网址</h3>参数    描述    默认值<br>url    网址<br>root    网站根目录<br>permalink    文章的 永久链接 格式    :year/:month/:day/:title/<br>permalink_defaults    永久链接中各部分的默认值<br>网站存放在子目录<br>如果您的网站存放在子目录中，例如 <a href="http://yoursite.com/blog，则请将您的">http://yoursite.com/blog，则请将您的</a> url 设为 <a href="http://yoursite.com/blog">http://yoursite.com/blog</a> 并把 root 设为 /blog/。<h3 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h3>参数    描述    默认值<br>source_dir    资源文件夹，这个文件夹用来存放内容。    source<br>public_dir    公共文件夹，这个文件夹用于存放生成的站点文件。    public<br>tag_dir    标签文件夹    tags<br>archive_dir    归档文件夹    archives<br>category_dir    分类文件夹    categories<br>code_dir    Include code 文件夹    downloads/code<br>i18n_dir    国际化（i18n）文件夹    :lang<br>skip_render    跳过指定文件的渲染，您可使用 glob 表达式来匹配路径。<br>提示<br>如果您刚刚开始接触Hexo，通常没有必要修改这一部分的值。<h3 id="文章"><a href="#文章" class="headerlink" title="文章"></a>文章</h3>参数    描述    默认值<br>new_post_name    新文章的文件名称    :title.md<br>default_layout    预设布局    post<br>auto_spacing    在中文和英文之间加入空格    false<br>titlecase    把标题转换为 title case    false<br>external_link    在新标签中打开链接    true<br>filename_case    把文件名称转换为 (1) 小写或 (2) 大写    0<br>render_drafts    显示草稿    false<br>post_asset_folder    启动 Asset 文件夹    false<br>relative_link    把链接改为与根目录的相对位址    false<br>future    显示未来的文章    true<br>highlight    代码块的设置<h4 id="相对地址"><a href="#相对地址" class="headerlink" title="相对地址"></a>相对地址</h4>默认情况下，Hexo生成的超链接都是绝对地址。例如，如果您的网站域名为example.com,您有一篇文章名为hello，那么绝对链接可能像这样：<a href="http://example.com/hello.html，它是绝对于域名的。相对链接像这样：/hello.html，也就是说，无论用什么域名访问该站点，都没有关系，这在进行反向代理时可能用到。通常情况下，建议使用绝对地址。" target="_blank" rel="noopener">http://example.com/hello.html，它是绝对于域名的。相对链接像这样：/hello.html，也就是说，无论用什么域名访问该站点，都没有关系，这在进行反向代理时可能用到。通常情况下，建议使用绝对地址。</a><h3 id="分类-amp-标签"><a href="#分类-amp-标签" class="headerlink" title="分类 &amp; 标签"></a>分类 &amp; 标签</h3>参数    描述    默认值<br>default_category    默认分类    uncategorized<br>category_map    分类别名<br>tag_map    标签别名<h3 id="日期-时间格式"><a href="#日期-时间格式" class="headerlink" title="日期/时间格式"></a>日期/时间格式</h3>Hexo 使用 Moment.js 来解析和显示时间。<br>参数    描述    默认值<br>date_format    日期格式    YYYY-MM-DD<br>time_format    时间格式    H:mm:ss<h3 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h3>参数    描述    默认值<br>per_page    每页显示的文章量 (0 = 关闭分页功能)    10<br>pagination_dir    分页目录    page<h3 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h3>参数    描述<br>theme    当前主题名称。值为false时禁用主题<br>deploy    部署部分的设置<br>完成以上步骤，及完成了网站的创建和配置工作。接下来便可以开始博客的创建、上传和发布。<h2 id="创建-amp-发布"><a href="#创建-amp-发布" class="headerlink" title="创建&amp;发布"></a>创建&amp;发布</h2>使用以下常用命令，即可完成博客的创建、上传和发布。<h3 id="init"><a href="#init" class="headerlink" title="init"></a>init</h3>$ hexo init [folder]<br>新建一个网站。如果没有设置 folder ，Hexo 默认在目前的文件夹建立网站。<h3 id="new"><a href="#new" class="headerlink" title="new"></a>new</h3>$ hexo new [layout] <title><br>新建一篇文章。如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来。<h3 id="generate"><a href="#generate" class="headerlink" title="generate"></a>generate</h3>$ hexo generate<br>生成静态文件。<br>选项    描述<br>-d, –deploy    文件生成后立即部署网站<br>-w, –watch    监视文件变动<br>该命令可以简写为<br>$ hexo g<h3 id="publish"><a href="#publish" class="headerlink" title="publish"></a>publish</h3>$ hexo publish [layout] <filename><br>发表草稿。<h3 id="server"><a href="#server" class="headerlink" title="server"></a>server</h3>$ hexo server<br>启动服务器。默认情况下，访问网址为： <a href="http://localhost:4000/。" target="_blank" rel="noopener">http://localhost:4000/。</a><br>选项    描述<br>-p, –port    重设端口<br>-s, –static    只使用静态文件<br>-l, –log    启动日记记录，使用覆盖记录格式<h3 id="deploy"><a href="#deploy" class="headerlink" title="deploy"></a>deploy</h3>$ hexo deploy<br>部署网站。<br>参数    描述<br>-g, –generate    部署之前预先生成静态文件<br>该命令可以简写为：<br>$ hexo d<br>注：在使用该命令前，需要关联一下你创建的repository ssh地址<br>在根目录的_config.yml文件内配置以下内容<br>deploy:<br>type: git<br>repo: github.com/你的github用户名/你的github用户名.github.io.git<br>branch: master</filename></title></folder></folder></li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/09/17/hello-world/"/>
      <url>/2018/09/17/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
  
  
</search>
